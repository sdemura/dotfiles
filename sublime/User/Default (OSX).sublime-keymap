[
    // Goto Definition
    {
        "command": "lsp_symbol_definition",
        "args": {
            "side_by_side": false,
            "force_group": true,
            "fallback": false,
            "group": -1
        },
        "keys": [
            "f12"
        ],
        "context": [
            {
                "key": "lsp.session_with_capability",
                "operator": "equal",
                "operand": "definitionProvider"
            },
            {
                "key": "auto_complete_visible",
                "operator": "equal",
                "operand": false
            }
        ]
    },
    // Goto Type Definition
    {
        "command": "lsp_symbol_type_definition",
        "args": {
            "side_by_side": false,
            "force_group": true,
            "group": -1
        },
        "keys": [
            "UNBOUND"
        ],
        "context": [
            {
                "key": "lsp.session_with_capability",
                "operator": "equal",
                "operand": "typeDefinitionProvider"
            },
            {
                "key": "auto_complete_visible",
                "operator": "equal",
                "operand": false
            }
        ]
    },
    // Goto Declaration
    {
        "command": "lsp_symbol_declaration",
        "args": {
            "side_by_side": false,
            "force_group": true,
            "group": -1
        },
        "keys": [
            "UNBOUND"
        ],
        "context": [
            {
                "key": "lsp.session_with_capability",
                "operator": "equal",
                "operand": "declarationProvider"
            },
            {
                "key": "auto_complete_visible",
                "operator": "equal",
                "operand": false
            }
        ]
    },
    // Goto Implementation
    {
        "command": "lsp_symbol_implementation",
        "args": {
            "side_by_side": false,
            "force_group": true,
            "group": -1
        },
        "keys": [
            "UNBOUND"
        ],
        "context": [
            {
                "key": "lsp.session_with_capability",
                "operator": "equal",
                "operand": "implementationProvider"
            },
            {
                "key": "auto_complete_visible",
                "operator": "equal",
                "operand": false
            }
        ]
    },
    // Goto Diagnostic
    {
        "command": "lsp_goto_diagnostic",
        "args": {
            "uri": "$view_uri"
        },
        "keys": [
            "f8"
        ],
    },
    // Goto Diagnostic in Project
    {
        "command": "lsp_goto_diagnostic",
        "keys": [
            "shift+f8"
        ],
    },
    // Jump to next Diagnostic in Tab
    {
        "command": "lsp_next_diagnostic",
        "keys": [
            "UNBOUND"
        ],
        "context": [
            {
                "key": "setting.lsp_active"
            }
        ]
    },
    // Jump to previous Diagnostic in Tab
    {
        "command": "lsp_prev_diagnostic",
        "keys": [
            "UNBOUND"
        ],
        "context": [
            {
                "key": "setting.lsp_active"
            }
        ]
    },
    // Rename
    {
        "command": "lsp_symbol_rename",
        "keys": [
            "UNBOUND"
        ],
        "context": [
            {
                "key": "lsp.session_with_capability",
                "operator": "equal",
                "operand": "renameProvider"
            }
        ]
    },
    // Format File
    {
        "command": "lsp_format_document",
        "keys": [
            "UNBOUND"
        ],
        "context": [
            {
                "key": "lsp.session_with_capability",
                "operator": "equal",
                "operand": "documentFormattingProvider | documentRangeFormattingProvider"
            }
        ]
    },
    // Format Selection
    {
        "command": "lsp_format_document_range",
        "keys": [
            "UNBOUND"
        ],
        "context": [
            {
                "key": "lsp.session_with_capability",
                "operator": "equal",
                "operand": "documentRangeFormattingProvider"
            }
        ]
    },
    // Document Symbols (a replacement for ST's "Goto Symbol")
    {
        "command": "lsp_document_symbols",
        "keys": [
            "primary+r"
        ],
        "context": [
            {
                "key": "lsp.session_with_capability",
                "operator": "equal",
                "operand": "documentSymbolProvider"
            }
        ]
    },
    // Workspace Symbols (a replacement for ST's "Goto Symbol In Project")
    {
        "command": "lsp_workspace_symbols",
        "keys": [
            "primary+shift+r"
        ],
        "context": [
            {
                "key": "lsp.session_with_capability",
                "operator": "equal",
                "operand": "workspaceSymbolProvider"
            }
        ]
    },
    // Hover Popup
    {
        "command": "lsp_hover",
        "keys": [
            "UNBOUND"
        ],
        "context": [
            {
                "key": "lsp.session_with_capability",
                "operator": "equal",
                "operand": "hoverProvider"
            }
        ]
    },
    // Follow Link
    {
        "command": "lsp_open_link",
        "keys": [
            "UNBOUND"
        ],
        "context": [
            {
                "key": "lsp.session_with_capability",
                "operator": "equal",
                "operand": "documentLinkProvider"
            }
        ]
    },
    // Expand Selection (a replacement for ST's "Expand Selection")
    {
        "command": "lsp_expand_selection",
        "keys": [
            "primary+shift+a"
        ],
        "context": [
            {
                "key": "lsp.session_with_capability",
                "operator": "equal",
                "operand": "selectionRangeProvider"
            }
        ]
    },
    // Toggle Terminus Panel
    {
        "keys": [
            "ctrl+\\"
        ],
        "command": "toggle_terminus_panel"
    },
    // swap the keybindings for paste and paste_and_indent
    {
        "keys": [
            "super+v"
        ],
        "command": "paste_and_indent"
    },
    {
        "keys": [
            "super+shift+v"
        ],
        "command": "paste"
    },
    {
        "keys": [
            "super+b"
        ],
        "command": "toggle_side_bar"
    }
]